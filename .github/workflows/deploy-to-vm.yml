on:
  push:
    branches:
      # remove after testing
      - feature/test-deploy-github-action
      - test
      - staging
      - master

jobs:
  Deploy:
    name: Deploy to vm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment
        run: |
          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            ENV="production"
            VM_IP="VM_IP_PRODUCTION"
            VM_PASSWORD="VM_PASSWORD_PRODUCTION"
            SENTRY_DSN="SENTRY_DSN_PRODUCTION"
            DOTENV_KEY="DOTENV_KEY_PRODUCTION"
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
            ENV="staging"
            VM_IP="VM_IP_STAGING"
            VM_PASSWORD="VM_PASSWORD_STAGING"
            SENTRY_DSN="SENTRY_DSN_STAGING"
            DOTENV_KEY="DOTENV_KEY_STAGING"
          elif [[ $GITHUB_REF == 'refs/heads/test' ]]; then
            ENV="test"
            VM_IP="VM_IP_TEST"
            VM_PASSWORD="VM_PASSWORD_TEST"
            SENTRY_DSN="SENTRY_DSN_TEST"
            DOTENV_KEY="DOTENV_KEY_TEST"
          elif [[ $GITHUB_REF == 'refs/heads/feature/test-deploy-github-action' ]]; then
            ENV="production"
            VM_IP="VM_IP_PRODUCTION"
            VM_PASSWORD="VM_PASSWORD_PRODUCTION"
            SENTRY_DSN="SENTRY_DSN_PRODUCTION"
            DOTENV_KEY="DOTENV_KEY_PRODUCTION"
          fi

          # Write environment variables to build-job.env
          cat > scripts/builder/build-job.env << EOF
          # Environment variables
          ENV=${ENV}
          

          # Docker Hub credentials
          DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD=${{ secrets.DOCKER_HUB_PASSWORD }}
          DOCKER_HUB_REPO=idea-forge

          # Build related variables
          SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_AUTH_TOKEN_REACT=${{ secrets.SENTRY_AUTH_TOKEN_REACT }}

          # VM
          VM_IP=${VM_IP}
          VM_PASSWORD=${VM_PASSWORD}

          # dotenv key
          DOTENV_KEY=${DOTENV_KEY}

          # tiptap auth token
          TIPTAP_AUTH_TOKEN=${{ secrets.TIPTAP_AUTH_TOKEN }}

          EOF

      - name: local-connect-remote-deploy
        run: |
          make local-connect-remote-deploy

      - name: Cleanup
        if: always()
        run: rm -rf ~/.ssh/
