on:
  push:
    branches:
      # remove after testing
      - feature/test-deploy-github-action
      - test
      - staging
      - master

jobs:
  Deploy:
    name: Deploy to vm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment
        run: |
          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "ENV=production" >> $ENV
            echo "VM_IP=VM_IP_PRODUCTION" >> $ENV
            echo "VM_PASSWORD=VM_PASSWORD_PRODUCTION" >> $ENV
            echo "SENTRY_DSN=SENTRY_DSN_PRODUCTION" >> $ENV
          elif [[ $GITHUB_REF == 'refs/heads/staging' ]]; then
            echo "ENV=staging" >> $ENV
            echo "VM_IP=VM_IP_STAGING" >> $ENV
            echo "VM_PASSWORD=VM_PASSWORD_STAGING" >> $ENV
            echo "SENTRY_DSN=SENTRY_DSN_STAGING" >> $ENV
          elif [[ $GITHUB_REF == 'refs/heads/test' ]]; then
            echo "ENV=test" >> $ENV
            echo "VM_IP=VM_IP_TEST" >> $ENV
            echo "VM_PASSWORD=VM_PASSWORD_TEST" >> $ENV
            echo "SENTRY_DSN=SENTRY_DSN_TEST" >> $ENV
          elif [[ $GITHUB_REF == 'refs/heads/feature/test-deploy-github-action' ]]; then
            echo "ENV=production" >> $ENV
            echo "VM_IP=VM_IP_PRODUCTION" >> $ENV
            echo "VM_PASSWORD=VM_PASSWORD_PRODUCTION" >> $ENV
            echo "SENTRY_DSN=SENTRY_DSN_PRODUCTION" >> $ENV
          else
            echo "ENV=test" >> $ENV
            echo "VM_IP=VM_IP_TEST" >> $ENV
            echo "VM_PASSWORD=VM_PASSWORD_TEST" >> $ENV
          fi

          # Write environment variables to build-job.env
          cat > scripts/builder/build-job.env << EOF
          # Environment variables
          ENV=${{ env.ENV }}

          # Docker Hub credentials
          DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD=${{ secrets.DOCKER_HUB_PASSWORD }}
          DOCKER_HUB_REPO=idea-forge

          # Build related variables
          SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_AUTH_TOKEN_REACT=${{ secrets.SENTRY_AUTH_TOKEN_REACT }}

          # tiptap auth token
          TIPTAP_AUTH_TOKEN=${{ secrets.TIPTAP_AUTH_TOKEN }}

          EOF

      - name: Build Docker image
        run: |
          make build

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          username: ubuntu
          host: ${{ env.VM_IP }}
          password: ${{ env.VM_PASSWORD }}
          script: |
            # Create deploy directory if not exists
            mkdir -p ~/deploy-scripts/idea-forge

            # Remove old files if they exist
            rm -rf ~/deploy-scripts/idea-forge/*
          script_stop: true

      - name: Copy deployment files
        uses: appleboy/scp-action@v0.1.4
        with:
          username: ubuntu
          host: ${{ env.VM_IP }}
          password: ${{ env.VM_PASSWORD }}
          source: "scripts/deploy/*"
          target: "~/deploy-scripts/idea-forge"
          strip_components: 2

      - name: Run deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          username: ubuntu
          host: ${{ env.VM_IP }}
          password: ${{ env.VM_PASSWORD }}
          script: |
            cd ~/deploy-scripts/idea-forge
            chmod +x main.sh
            ./main.sh

      - name: Cleanup
        if: always()
        run: rm -rf ~/.ssh/
